프로그래밍 언어 활용


웹(Web) 이란 무엇인가?

	웹(Web)이란 월드 와이드 웹(World Wide Web)의 줄임말로,
	첫 글자를 따서 WWW라고 부르기도 합니다.
	웹을 영어 뜻 그대로 풀이하면 '거미줄' 이라는 뜻이며,
	이는 '세상의 크기만한 거미줄'이라고 직역할 수 있습니다.

인터넷이란 무엇인가?

	인터넷(영어: Internet, 누리망, 문화어: 인터네트)은
	컴퓨터로 연결하여 TCP/IP(Transmission Control Protocol/Internet Protocol)라는
	통신 프로토콜을 이용해 정보를 주고받는 컴퓨터 네트워크이다.

	인터넷이란 이름은 1973년 TCP/IP를 정립한 빈튼 서프와 밥 간이
	'네트워크의 네트워크'를 구현하여 모든 컴퓨터를 하나의 통신망 안에
	연결(International Network)하고자 하는 의도에서 이를 줄여
	인터넷(Internet)이라고 처음 명명하였던 데 어원을 두고 있다.
	이후 인터넷은 "정보의 바다"라고 불리면서 컴퓨터가 서버와 클라이언트로써
	서로 연결되어 TCP/IP를 이용해 정보를 주고 받게 되었다.

	복수의 통신망을 집합시킨 광역 통신망을 뜻하는
	일반명사를 '인터네트워크'(internetwork)라고 하는데,
	미국 국방성의 아파넷은 이러한 인터네트워크를 본격적으로 구축한 최초의 사례이다.
	아파넷은 초기에는 연구목적으로 쓰였으나 참여 기관이 늘어나면서
	다양한 목적으로 아파넷을 쓰고자 하는 요구가 많아졌다.
	또한, 컴퓨터의 종류가 다양해지면서 프로토콜을 재정비할 필요성이 부각되었다.
	1983년, 미국 국방성은 군사용 네트워크 기능을
	밀넷(MILNET, Military Network)으로 분리시키고,
	아파넷은 민간용 네트워크가 되었다.
	또한, 초창기에 사용하던 NCP(Network Control Program)보다 데이터 전송 속도 및
	안정성이 향상된 TCP/IP를 공식 프로토콜로 도입했다.
	이로 인해 인터넷 컴퓨터 네트워크의 기본 구조가 갖춰졌으며,
	이 때를 즈음하여 '인터넷'은 단순히 일반명사 '인터네트워크'의 약어가 아닌
	고유명사 취급을 받기 시작했다.

	'internetwork'의 약어인 'internet'과 구별하기 위해
	고유명사 인터넷은 'Internet' 또는 'INTERNET' 등으로 표기한다.
	인터넷은 LAN 등 소규모 통신망을 상호 접속하는 형태에서 점차 발전하여
	전 세계를 망라하는 거대한 통신망의 집합체가 되었다.
	인터넷에는 PC 통신처럼 모든 서비스를 제공하는 중심이 되는 호스트 컴퓨터
	(서버컴퓨터)도 없고 이를 관리하는 조직도 없다.
	인터넷을 대표하는 조직으로 ISOC(Internet Society)가 있지만
	인터넷을 총괄 관리하는 기구는 아니다.
	그러나 인터넷을 총괄적으로 관리하지는 않지만 인터넷상의 어떤 컴퓨터
	또는 통신망에 이상이 발생하더라도 통신망 전체에는 영향을 주지 않도록
	실제의 관리와 접속은 세계 각지에서 분산적으로 행해진다.

	대중적인 월드 와이드 웹은 하이퍼텍스트 전송 프로토콜(HTTP)과 함께 사용되고,
	HTTP로 되어 있는 웹 페이지를 보기 위한 웹 브라우저로는
	마이크로소프트의 인터넷 익스플로러, 모질라 재단의 모질라 파이어폭스 등을 이용한다.

	인터넷은 표준 인터넷 프로토콜 집합(TCP/IP)을 사용해 전 세계 수십억 명의 사용자들에게
	제공되는 지구 전체의 컴퓨터 네트워크 시스템이다.
	인터넷은 개인, 학교, 기업, 정부 네트워크 등을 한정적 지역에서
	전체 영역으로 유선, 무선, 광케이블 기술 등을 통해 연결하여
	구성한 네트워크들의 네트워크이다.
	인터넷은 하이퍼텍스트 마크업 언어(HTML)나 전자 우편을 지원하는
	기반 기술 등을 통해 광대한 범위의 정보 자원과 서비스들을 운반한다.

	인터넷 구축에 사용된 하드웨어와 프로토콜은 전화, 음악스트리밍,
	영화스트리밍, 홈카라오키, 게임, 홈서버 등의 서비스를그로 구현하고 있다.

	신문이나 도서 등의 출판물들도 웹사이트 기술에 맞춰 새롭게 구현되었는데,
	블로그나 RSS 등과 같은 형태로 독자들에게 서비스되었다.
	인터넷에 의해 사람들의 소통방식도 인스턴스 메시지,
	인터넷 포럼, SNS 등으로 진화해 나갔다.
	아웃렛이나 소규모 상인, 도매상의 영역에서도
	온라인 쇼핑몰이 거대한 변화를 가져왔다.
	인터넷을 통한 기업 간 거래와 금융서비스 등에 의해
	전체 유통체계도 영향을 받게 되었다.

	추가로 덧붙이자면, 인터넷이 탄생하게 된 직접적 요인은 미국과 소련 사이에 치열했던
	군가적 경쟁이라고 볼 수 있고 이 과정에서 GPS 또한 발전됐다고 볼 수 있다.


출처 : http://conol.tistory.com/9 웹

	https://ko.wikipedia.org/wiki/%EC%9D%B8%ED%84%B0%EB%84%B7 인터넷


---------------------------------------------------------------------------------------

클라이언트    <-브라우저를 통해->		서버

request			          		response
                                HTML(응답)	DB

HTML : 구조, 정보
(Hyper Text Markup Language)    PHP(Hypertext Preprocessor 하이퍼텍스트 프리프로세서), jsp,sevlet..등등

CSS (design)

JavaScript (action)

Jquery(javascript library)

	HTML : 웹 페이지를 위한 지배적인 마크업 언어이다
	Hyper text : 참조(hyper link)를 통해 독자가 한 문서에서 다른 문서로 즉시 접근할 수 있는 텍스트이다.

----------------------------------------------------------------------------------------

IP: 주소 " 각 PC를 구분"
DNS: Domain Name Server. 숫자로 된 IP를 문자열로 변환.

네트워크: 각 PC를 연결
인터넷: 네트워크 서비스 중 하나.

port "각 pc의 응용프로그램을 구분" (연결통로)

	인터넷 80
	mysql 3306
	ftp	21

http://www.apple.com:포트/
규약://서비스.아이피주소:포트/디렉토리


OS(운영체제) : 프레임워크라고도 한다. window, mac, Linux, 안드로이드, IOS
protocol : 통신규약


응용프로그램 : 각각의 OS에 맞는 어플리케이션이다.


--------------------------------------------------------

HTML5		W3c.org.. 웹표준 권고..

https://www.w3schools.com 유용한 사이트.

사람(소스)	브라우저엔진(브라우저 엔진에게 UTF-8이라고 저장하라고 얘기한다.)	BOM(브라우저오브젝트객체)

html										                      	html

--------------------------------------------------------


기계와 대화 	컴파일..	컴퓨터(0,1).. 기계어..

사람(소스)	컴파일러(번역)		기계

프로그램언어	프로그램
c,java,...

스크립트언어	javascript

OS window

HTML ....	브라켓, 서브라임텍스트, 에디트플러스,, 메모장, 아톰, 이클립스..

HTML5 >> 사용자 입장, 멀티 기능(비디오, 오디오)	2014년 11월 이후.

<!DOCTYPE html> 	<<< DTD(문서 지정 형식)		HTML%

video
1.개발툴 : 브라켓
2.플러그인 : 보충, 보조, 추가기능 >>> emmet 설치 어플리케이션의 추가기능.

HTML의 주석 <!-- 설명글 -->

--------------------------

emmet 사용법

    html:5 치고 탭 치면 기본 양식 나온다.

    link:css 탭 -> css기본 양식 나온다.

    $ 넘버링에 사용

    {} 안에 텍스트 넣을 때 사용

    + 형제 sibling

    > 자식 child

    $@숫자 넘버링에서 시작을 @뒤에 오는 숫자로 해준다.

    () 그룹지어줄 수 있음(묶어서 연산 먼저 해줄 수 있음)

    ctrl+alt+오른쪽화살표 : 현재 태그에서 다음 태그로 넘어간 뒤 그 태그 안 사이로 쏙 들어감



1.HTML

HTML은 구조를 담당하며 태그로 이루어져 있다. <태그> </태그> ** 태그는 다른말로 Element라고 한다.

<html> 태그는 루트 엘리먼트라고 부른다.
<head> 문서의 정보부분
<body> 브라우저에 표시될 영역

태그
block(블록)으로 이루어져 있다.
    . width, height값 설정가능
    . 자동으로 줄바꿈(개행)
    . width값을 설정하지 않으면 부모태그의 100%

    대표적인 블록태그 div, p, table, form, ul,ol,li.. div... 레이아웃

엔진이 사용자가 조립한 HTML을 매칭시켜서 브라우저에 뿌린다.
웹의 기본단위는 픽셀

px >> 웹==포토샵..

RGB모드 == 가산모드 == 색광모드
#ffffff 하얀색
#000000 검정색

2. CSS

CSS는 디자인을 담당한다.

선택자(속성:속성값;)
selector{property:value;}

* "전체 선택자"



div태그는 포토샵에서 레이어에 해당.
div 태그가 많기 때문에 id값을 줘서 구분한다.

아이디 선택
#아이디명 "하나의 태그를 선택"

클래스 선택자
.클래스명 "여러태그에 동일 한 값"






css를 html에 포함시켜주는 것을
확인하려면 XAMPP를 설치하자!(웹서버를 설치하자!)

XAMPP

    XAMPP는 크로스 플랫폼 웹 서버 자유 소프트웨어 꾸러미이다. 아파치 웹 서버 MySQL, PHP, 펄을 포함하고 있다.
    GNU 일반 공중 사용 허가서로 배포되며 자유롭고 쓰기 쉬운 웹 서버이다.
    마이크로소프트 윈도, 리눅스, 솔라리스, 맥 오에스 텐 등에서 동작하며 주로 웹 개발에 사용된다.


아파치 (웹서버)
mysql (DBMS==DB)
PHP

합쳐서 AMP 라고 부른다.









margin:0 auto; 부모
div는 포토샵의 레이어와 똑같다.



reset.css >> HTML 문서 작업 시 기본이 되는 작업을 미리 설정(초기설정)
                처음에 HTML을 작성하면 기본적으로 reset.css가 들어가게 되어있다.
                <link rel="stylesheet" href="css/reset.css">


CSS RESET란???
각 브라우저에는 각각 기본 스타일이 설정되어 있으며, 이로 인해 브라우저간에 표시가
생각처럼되지 않을 때가 있기 때문에 미리 각 브라우저의 스타일을 초기화하기 위해서 사용한다.



포트를 수정해주는 방법

	XAMPP Control Panel 실행 후
	Apache 의 Config 에 들어가서 (메모장으로 열림)

	포트설정 Listen 포트넘버
	ServerName localhost: 포트넘버
	킨 상태에서 바꾸면 충돌 날 수 있으므로
	껐다가 다시 키고 우측의 Config 에서 Service and Port Settings
	에서 메인포트 번호가 맞는지 다시 확인해주자.


---------------------------------

HTML ... 구조 ... >>> <<< BOM(Browser Object Model) 일대일...
 태그                         객체(member 속성, 메소드)

    @태그에는 두가지가 있다.
        블록과 인라인. 기본적으로는 블록이다.
        div태그는 레이아웃 역할. 레이어와 비슷하다.

        블록 ( 레이아웃 ) - div : 레이아웃관련 p : 텍스트관련 form : 클라이언트 정보 서버에 전송 table

            블록에서는 자동으로 줄바꿈이 일어나고
            width를 설정하지 않으면 부모태그의 100%
            width, height 값을 설정할 수 있다.

        인라인 ( 특정 요소 ) - a span

            자동으로 부모의 왼쪽부터 오른쪽으로 정렬




CSS ... 디자인

    1. 외부스타일(외부파일연결) <<< 프로젝트 생성
    2. 내부스타일(HTML 안에) HTMl 하나 있을 경우 쓴다.
    3. 인라인 스타일(태그 안에 직접 지정). 특별한 경우에만 사용





selector{property:value ; property:value ;} 이런식으로 작성

 selector(선택자) "구조를 선택해서 디자인.."
 1. 태그 선택자 : div, html,body,p,a,img
 2. 전체선택자 사용 : *
 3. id 선택자 : #id 로 선택. 유일한 하나의 태그에 적용
 4. 클래스 선택자 :  .class 쓰면 여러태그에 동일한 속성을 설정 할 수 있다.
 5. 태그 하위선택자 " 하위 태그 중에서 선택"
 6. 태그 > 자식선택자
 7. 다중선택 : html, body 처럼 쉼표로 구분하여 다중선택한다.

그냥 아무말없이 #wrap 처럼 앞에 샵이 있으면 그것은 div다.



 margin "나하고 내 부모 또는 다른 태그와의 여백"
 padding "나하고 내 자식 태그, 컨텐츠와의 여백"


비트맵과 벡터

    비트맵(확대시키면 이미지가 깨져요)        백터(확대시키면 유지되요)

        .jpg,.png,.gif(포토샵에서 주로 쓰임)         .svg(일러에서 주로 쓰임)

        크기
        기본단위px

        퍼센트%는 부모 태그를 기준으로 설정


DTD
    DTD는 문서지정형식이다. (Document Type Definition, DTD)
    어떤 문서형식인지 처음에 지정해 주는 것이다.(문서 형식 선언)
    태그가 아니라 이 안의 문서를 이렇게 진행 하겠다 라고 알려주는 것이다.

역사
    HTML1 -> HTML 2 -> HtML 3 -> HTML 4 -> XHTML (엄격했었던 시절)
    -> HTML5 (유연해짐)


rel은 무엇인가?

    link 태그의 부하 녀석이다.

    relation! 륄 뤠이 션~ 의 줄임말이 되겠다. 릴레이션은 관계
    <link rel="stylesheet" href="style.css">

    위의 link 태그는 stylesheet와 관련이 있고
    참조하는 파일은 style.css라는 것!

메타태그

description 설명
keywords 검색어, 검색 키워드
author 저자(이름)
<meta http-equiv="refresh" content="30"> 새로고침  content 안에는 새로고침할 초를 넣으면 된다.

h태그

h1>>> 이미지 로고나 특정 로고에 많이 사용한다.


컨텐츠크기

기본 = content-box ( 아무런 말이 없으면 기본적으로 컨텐츠 박스로 설정되어 있음. 컨텐츠 길이만큼.)

    너비 = width + padding + border

    너비를 다 합쳐서 계산하는 방식을 box-sizing 이라고 한다.

border-box 테두리안에 박스를 형성(border 만큼 내용이 줄어든다.)
content-box(기본설정) 테두리만큼 박스 바깥공간을 차지한다.

경로


    ./ , 생략 -> 현재 파일 위치
    ../ 현재 파일의 부모 디렉토리
    ../../ 한단계 더 올라가려면 ../ 를 또 붙여주면 된다.

    절대 경로 : 어디서나 접근 가능
    상대 경로 : 기준을 중심으로 접근


설계를 먼저 하고 코드를 작성하자. 최소한 구상이나 생각이라도 하면 도움이 된다.




매우 중요 ************ 웹접근성 위반 벌금이 최대 3000만원임
    이미지 태그가 가장 많이 노출되어 있음.
    이미지 태그에 alt 를 꼭 써주도록 하자!!!(안쓰면 title 써준다.)
    둘중에 하나를 써야됨. alt만 써야됨.
    알트를 안 쓸 경우 title을 써준다. 둘다 같이 쓰면 역시 접근성 위반

    웹 접근성 : 웹에 접근할 수 있는 동등한 권리.
                장애를 가진사람과 장애를 가지지 않은 사람 모두 이용할 권리를 가지게 함.

    월드 와이드 웹 (World Wide Web)을 창시한 팀 버너스 리(Tim Berners-Lee)는 웹이란
'장애에 구애 없이 모든 사람들이 손쉽게 정보를 공유할 수 있는 공간'이라고 정의하였으며,
웹 콘텐츠를 제 작할 때에는 장애에 구애됨이 없이 누구나 접근할 수 있도록 제작하여야
한다고 하였다. 이렇듯 웹 창시자가 웹의 기본적 철학에서 웹 접근성 부문을 강조함에도 불구하고,
웹 접근성을 바라보는 입장에 따라 다르게 정의하고 있다.

월드 와이드 웹 컨소시엄(W3C: World Wide Web Consortium)웹 접근성 이니셔티브(WAI: Web Accessibility Initiative)링크와 짐 대처 (Jim. Thatcher)는 웹 접근성에 대해 매우 현실적으로 정의하고 있다. 즉, 장애를 가진 사람들이 웹 콘텐츠를 인지하고, 편리하게 사용할 수 있으며, 그 내용이 이해하기 쉬워야 하며, 견고성을 지녀야 웹 접근성이 있다고 보는 관점이다. 인터넷 전자도서관인 Wikipedia 는 웹 접근성의 개념을 웹 콘텐츠 뿐만 아니라 인터넷을 통하여 전달될 수 있는 모든 콘텐츠로 확대하고 있다.

웹표준성과 웹접근성에 맞게 제작하여야 한다.

***********웹 접근성 자가진단 서비스로 사이트를 꼭 확인하자 https://accessibility.kr/nia/check.php

****************** 웹표준성 검사 https://validator.w3.org/ 이것 역시 확인

    https://www.w3.org/ 들어가서 우측 중단의 validator 유효성 검사를 확인하자. (HTML, CSS 지원)

    웹 표준성과 웹 접근성은 기본이다.

----------------------------------------
기본적인 reset.css 코드
--------------------------
@charset "utf-8";
*{
    margin: 0;
    padding: 0;
}
html, body{
    width:100%;
    height:100%;
}

ul,ol,li{
    list-style: none;
}
-------------------------------


display : 기본 속성을 변경해준다.

    block >>> inline >>> block 블럭을 인라인으로. 인라인을 블럭으로.


css에서 div는 태그가 상당히 많이 쓰이므로 태그인 div로 접근하는게 아니라 id나 클래스로 접근해야 한다.

css에서는 클래스선택자를 가장 많이 사용한다. id도 좋긴한데 따로따로 하나씩 줘야함.

아이디는 유일하게 한군데에 쓰인다. >>> 레이아웃 설정에 쓰임
#Wrap 에 많이 쓰인다. 중복된게 없는 wrap 에 쓰임!


text-align : 텍스트의 가로 정렬
line-height : 글자 행간. 부모태그의 height와 같게 설정해준다.
                0~부터 위에서부터 세로로 움직인다.
                위에서부터 글자의 높이값을 지정해줄 수 있다.


overflow

    overflow:hidden 흘러넘치는걸 안보이게 해라
    overflow:scroll 흘러넘치는걸 스크롤로 처리해준다.

--------------------------------------------------
[CSS] Overflow 속성 총정리


CSS 에는 특정 요소의 자식 요소가 부모 요소의 범위를 초과 할 때 어떻게 처리 할지를 결정 할 수 있는 overflow 속성이 있습니다. overflow 의 속성 값으로는 visible, hidden, scroll, auto 등을 사용 할 수 있습니다.

자식 요소가 부모요소의 범위를 초과 할 때 어떻게 처리 할지를 결정 하므로 부모요소에 overflow 속성 값을 결정해 주어야 합니다.

.parent { overflow: visible | hidden | scroll | auto; }


overflow 의 속성 값
overflow: visible
overflow 의 값을 visible 로 사용 할 경우 특정 요소가 박스를 넘어 가더라도, 그대로 보여줍니다.

overflow: hidden
overflow 의 값을 hidden 으로 설정하면, 부모요소의 범위를 넘어가는 자식요소의 부분은 보이지 않도록 처리 합니다.

overflow: scroll
overflow 의 값을 scroll 로 설정 하면, 부모요소의 범위를 넘어가는 자식요소의 부분은 보이지 않지만, 그 대신 사용자가 확인 할 수 있도록 스크롤바를 표시 해줍니다.

overflow: auto
overflow 의 값을 auto 로 설정할 경우 부모요소의 범위를 넘어가는 자식요소의 부분이 있을 경우 해당 부분을 보이지 않도록 처
리하고, 사용자가 해당 부분을 확인 할 수 있도록 스크롤바를 표시 합니다.


-----------------------------------------------------

hr 밑줄
br 계행, enter <br/>

이건 그냥 알고만 있자. 자주 쓰이지 않음
    b 굵게
    i 이탤릭
    small 작게
    ins 밑줄
    sup 위첨자
    sub 아래첨자
    del 삭제


1. 순서가 있는 태그 ol li

    ol type= 으로 타입설정 가능. 알파벳이나 로마자 등등..

2. 순서가 없는 태그 ul li


잘안씀

    <dl>목록태그</dl>
           <dt>제목</dt>
           <dd>목록</dd>




float : 붕 뜬다. 띄워서 부모(상위)태그 중심으로 좌,우에 재배치
블록태그를 가로 정렬할 때 가장 많이 쓰이는 방법이다.

float left하면 기본적으로 부모 height:auto로 해줘야 편리하다.

자식이 붕 떠버리니깐 높이가 없어지게됨 따라서 overflow:hidden 을 통해 float설정을 해제시켜준다.

배열 : 연속으로 배치되는 것. 같은 자료형 순서에 맞게 연속적으로 배치

GNB ( Global navigation bar )

--------------------------------

 :hover 마우스를 오버시 스타일 마우스를 아웃시 원래 스타일

css hover > 마우스를 오버했을 때 스타일, 마우스를 아웃하면 원래 스타일

cursor: pointer; 마우스 모양을 손모양으로 바꿔줌

--------------------------------------------
** 무료아이콘 쓰기 www.iconfinder.com

--------------------------------------------

background-image:url(이미지경로);
background-repeat:반복유무;
background-size:
background-position:
background-color:

마우스를 올려서 이미지 색깔을 바꾸게 하는법은 백그라운드 이미지, 호버를 이용한다.
html에서 이미지태그를 직접 만드는 것은 보통 이미지 하나만 보여줄 떄 쓴다.
li태그에서 호버를 해주는데 호버에 background-color를 이용하여 이미지 색깔을 변경해준다.
정렬은 background-position으로 퍼센트로 정렬해준다.

다른방법은 SVG를 JQuery로 변경해주는 방법이 있는 듯 하다.

css에서 속성을 위에서부터 큰덩어리부터 작은덩어리로 주도록하자.

GNB ( Global navigation bar )

    통용되는 의미 : 최상위 메뉴로 보통 상단에 위치.

------------------------------------------------

HTML Tag(element)로 이루어져 있다. >> 기본적으로 block,inline 으로 나누어서 설정되어 있다.

1. block

자동으로 줄바꿈
width,height 설정 할 수 있다.

    div, p, table, form, ul, ol, li... 등이 있다.

2. inline

자동으로 부모 태그의 왼쪽부터 오른쪽으로 가로정렬
width, height 설정 할 수 없다.


------------------------

전체적인 과정

1. 기획
2. 요구/분석 >> 설문... 스토리보드
3. 실행(제작)
4. 테스트
5. 배포
6. 유지/보수


------------------------

css

선택자( 속성:값; ; ; ; )

--------------------------

** 컨텐츠의 크기 **


box-sizing

    1. 기본(암묵적으로 생략된 기본 값임.  content-box. 박스사이징 속성이 content-box로 원래 초기에 설정되어 있음.)

        너비 = width + padding + border

    2. border-box

        너비 = width(padding+border) "처음 정해진 width 값"


------------------------------------------------------

a 태그에서 title=" " 마우스 올렸을 때 설명 표시

항상 값을 입력해놔야한다. 임시링크로 라도 #를 넣어두던지 해야함.

a 태그는 인라인태그. 반드시 값을 설정해야 한다.

text-decoration:none 으로 해주면 a태그의 밑줄을 없앨 수 있음.
reset에서 기본적으로 설정해준다.

가상태그(아직 일어나지 않은 태그)

-위에서부터 순서대로 적용

    a:link "링크가 걸려 있으면.." (주로 사용)
    a:visited "액션을 실행하고 나서" (캐쉬에 따로 저장되어 방문한 기록을 토대로 발동)
    a:hover "마우스를 오버했을때" (주로 사용)
    a:active "마우스를 눌렀을 때"

a태그에 값을 안주면 a:link 속성 안먹는다. 링크가 안걸려있는 상태여도 #을 넣어두던지 해줘야 한다.

target="이동방식"

    _blank "새창띄워서 이동"
    _parent "부모창으로 이동"
    _self "기존창 유지" (타겟의 초기 기본값)     나중에 자바스크립트에서 back(), go()를 쓸 때 나옴.
    _top "기존창 유지"

display

    display 속성은 인라인과 블럭라인 태그의 속성을 바꿔주는 역할을 한다.
         none도 있음.

목록태그(li)

    li태그는 네비게이션 설정에 필수이다.

    li 와 a 관계

img

    img태그 안에 alt, width, src, height 속성 등을 쓸 수 있다. (태그에 쓸 수 있는 속성)

    보통은 높이에 값을 안준다. auto로 설정시킴

    이미지를 처음에 제작할 때 들어갈 크기에 맞게 비례되게 해서 제작한다.

    (왜? 줄어들었을 때 깨지지 않도록 해야하니까.)


    반응형 웹 작업시

        img width:100%, height:auto 로 해야 한다.

        화면을 확대하거나 축소했을 때 같은 비율로 자연스럽게 줄어들거나 늘어나도록 해야 한다.


    1. img이름은 끝자리 0번지부터.
    ex) bg_0.jpg
    ex) bg_00.jpg
    2. img이름 가독성: "누구나 이해 할 수 있게 한다."
    3. 한글이름 사용하지 않는다.
---------------------------

background-color

    red, black
    rgb(255,0,0)
    rgba(255,0,0,1) 여기서 1은 투명도조절

background-image:url(경로);

background-repeat:반복유무,방법
background-size:cover; // 부모태그의 width값에 따라.. height가 자동으로
background-position: 50% 0% (가로 정중앙)

background-size에서
    contain은 부모 높이에 맞추고, cover은 박스 크기에 맞춘다.
    제일 많이 쓰는 건 cover임




URL(Uniform Resource Locator, 문화어: 파일식별자, 유일자원지시기)은 네트워크 상에서 자원이 어디 있는지를 알려주기 위한 규약이다.

흔히 웹 사이트 주소로 알고 있지만, URL은 웹 사이트 주소뿐만 아니라 컴퓨터 네트워크상의 자원을 모두 나타낼 수 있다. 그 주소에 접속하려면 해당 URL에 맞는 프로토콜을 알아야 하고, 그와 동일한 프로토콜로 접속해야 한다.

FTP 프로토콜인 경우에는 FTP 클라이언트를 이용해야 하고, HTTP인 경우에는 웹 브라우저를 이용해야 한다. 텔넷의 경우에는 텔넷 프로그램을 이용해서 접속해야 한다.

컨트롤+쉬프트+F5 = 강력새로고침(캐쉬까지)

실제로 쓰이는건 float: , overflow;를 제일 많이 쓴다.
                        clear:both; 이런 것도 있음
                        :after 이런 것도 있음.

background: 색상 이미지 반복 위치;
background-attachment:fixed;

--------------------------------------

table, form 회원가입, 로그인페이지 구성 나중에 코르도바도 사용할 거임.

코르도바?

    코르 도바는 오픈 소스 모바일 개발 프레임 워크입니다. 각 모바일 플랫폼의 네이티브 개발 언어를 피하고 크로스 플랫폼 개발을 위한 HTML5, CSS3, 자바 스크립트 등 표준 웹 기술을 사용할 수 있습니다.


색상을표현하는 방식으로는 red, yellow
    #ff 00 00 >> #f00
    rgb(255,0,0)
    rgba(255,0,0,1)


안드로이드에서는 색깔값을 #000000 이런식으로  16진수로 표시한다.

우리도 이방식을 사용하도록 하자ㅎㅎ

노드, node

    트리(tree) 구조에서 데이터의 상하위 계층을 나타내는 위치의 항목

-------------------------------------------
*
HTML에서 이미지는 비율이 중요하다.

이미지는 width 값에 따라서 height가 자동으로(원본이미지의 같은 비율) 변한다.

마진과 패딩

    padding " 나와 내 자식과의 여백"
    margin "나하고 부모 또는 다른 태그와의 여백"


4개의 padding 속성값을 가질 때는 top, right, bottom, left 순으로 설정합니다.

    ex) padding: 10px 20px 30px 40px;

---------------------------------

테이블 태그는 예전에 퍼블리셔들이 쓰던 방법이였다. (슬라이스 툴로 포토샵이 코드 짜주는 기능이 있었음.)

지금의 테이블 태그는?

table

1. block
2. 특정(DB관련) 부분에 사용
3. 정해진 용도에 사용되고 변형하기가 어렵다.
4. 반복적이고 단순한 구조에 적합하다.(ex : 게시판, 쇼핑몰 반복구조 등..)
5. HTML5에서는 사용을 많이 하지 않는다. 지양한다.

불과 몇년전만 해도 테이블을 많이 썼다.

    th 테이블 헤더

    tr 테이블 로우 테이블의 한 행 한 행을 의미.

    td 테이블 데이터

*DB에서 자료를 불러올 때 쓰인다. 근데 그마저도 ul li 로 하면 더 편함. 이미지 수정에 용이하기 때문.


스타일 적용을 인라인으로 하지 않는다

rowspan 행통합
colspan 셀통합

border-collapse:collapse; 셀의 경계선을 충돌시킴 (겹침)

테이블은 밑으로 떨어지는 속성이 있다.

HTML 구조(예:table)에 지나치게 의존하면 의미론적 마크업을 포기해야 하는 경우가 발생하기 때문에 CSS를 이용해야 합니다.

===============form====================

클라이언트는 정보를 서버에 전달한다.

사람이 엔진을 통해 브라우저에 있는 객체에 값을 전달한다.

소스                  객체(Object)
                        속성(프로퍼티) <<멤버
                        메서드(기능)   <<멤버
form                 form

브라우저에 폼이라는 객체가 이미 정의되어 있다. 개발자들이 만들어놨음

*폼 태그 작성시

    <form action="폼의 정보를 전송받을 서버페이지" method="전송방식">

		action : 전송받을 서버페이지

		method : 전송방식

    전송방식은 기본으로 get 이랑 post 방식이 있다.

form 에서는 name과 value 를 꼭 기억해야된다.

    name : 서버에 전송해주는 키
    value : 키에 해당하는 값
-------------------------------------------
input

    클라이언트의 정보를 입력하는 태그 (폼과 관련)

		type="text".. 텍스트를 입력
		type="password" .. 비밀번호를 입력
		placeholder 속성 -		텍스트창 위에 연하게 글자를 표시해줌


********접근성 위반을 항상 생각해야 한다. input 태그 안에 label 속성을 쓰지 않으면 접근성 위반이다.
반드시 라벨 태그를 써줘야 한다. 안쓰면 웹 접근성 위반임
------------------------------------------
submit 제출

	정보를 제출해준다.( value 값을 폼태그의 액션 속성의 페이지로 전달해줌.)

---------------------------------------------
radio

	같은 인풋 radio 로 묶인 애들 끼리는 묶은 radio중 하나 를 선택 할 수 있게 한다.

checkbox

	input 의 type 속성이 checkbox로 묶인 것들 끼리 다중 선택 가능


**넘어갈 때는 value가 간다.
	폼태그의 액션 속성으로 지정해준 사이트로 값을 전달해준다.
----------------------------------------------

CSS에서 문단의 첫줄 들여쓰기를 해주고 싶으면
			text-indent : 값 을 설정해주자.
			왼쪽에서 텍스트를 살짝 비게 해줌.



글자와 글자사이의 자간 letter-spacing
단어와 단어와의 간격 word-spacing
글자를 가운데에 오게 맞추려면 라인하이트를 쓰면 맞출 수 있다.

-------------------------------------------

소켓
네트워크 소켓은 컴퓨터 네트워크를 경유하는 프로세스 간 통신의 종착점이다.
오늘날 컴퓨터 간 통신의 대부분은 인터넷 프로토콜을 기반으로 하고 있으므로,
대부분의 네트워크 소켓은 인터넷 소켓이다. 네트워크 통신을 위한 프로그램들은 소켓을 생성하고,
이 소켓을 통해서 서로 데이터를 교환한다. 소켓은 RFC 147에 기술사항이 정의되어 있다.

인터넷 소켓은 다음과 같은 요소들로 구성되어 있다.

인터넷 프로토콜 (TCP, UDP, raw IP)

	로컬 IP 주소
	로컬 포트
	원격 IP 주소
	원격 포트

인터넷 소켓은 크게 두 개의 타입으로 분류할 수 있다.

	UDP 프로토콜을 사용하는 경우
	TCP 프로토콜을 사용하는 경우

--------------------------------------------
해상도 1100px 대충안에

footer는 100~300px

1.HTML 구조
2.CSS 디자인
선택자(속성:값;;;;)

회원가입, 로그인 << 필수 요소이다.

margin : 나하고 부모 또는 다른 태그와의 여백

line-height: 크기 지정해주면 한줄에서 자동 세로가운데오게됨

-----------------

span은 inline 태그이다.

font-size : px, %, em		글꼴의 크기(기본)
	vw >> width 값을 변함에 따라 변동
	vh >> height 값의 변함에 따라 변동

-----------------------------------

자바의 이클립스 SVN

	형상관리, 버젼관리
	이클립스 SVN 깔으려면 자바를 설치해야 한다.
	+플러그인 설치도 해야함

---------------------------------

**마진겹침현상**

위 아래 네모 두개의 형제 태그가 있다고 하자.
위 네모에 해당하는 태그에 CSS로 마진 바텀,
아래 네모에 해당하는 태그에 CSS로 마진 탑 주면
큰 마진이 작은 마진 잡아먹는다.

margin:0 auto;
좌우의 여백을 합쳐서 2로 나눈 값을 자동으로 좌우 마진값으로 설정

------------------------------------

radio는 name 값을 같게 해줘야 한다.
checkbox도 name 값을 같게 해줘야 한다.
checkbox는 name 값을 userHobbys[] 이런식으로 객체에 담는다.

------------------------------

form 태그는 클라이언트(사용자)정보를 서버에 전송해주는 태그이다.

	action 서버페이지
	method 전송방식 결정 : GET, POST

	사용자의 데이터를 웹 서버가 즉각적으로 반응하는
	대화적인 서비스 <form>태그가 등장하게 되었다.

	enctype 폼의 데이터를 전송 시 암호화 방법 지정
	name 폼의 이름, 자바스크립트에서 사용
	action 폼의 데이터를 처리해주는 파일명이 온다.
	method 폼의 데이터를 전송하는 방법 지정 (get,post)

--------------------------------
input

	한 줄 짜리 텍스트를 입력 받고자 할 때 사용하는 태그

input 의 속성들

	maxlength : 입력받을 문자열의 길이를 지정. 최대 문자 길이
	size :입력양식의 길이 지정
				문자가 들어갈 수 있는 크기. 사이즈가 4면 4글자정도의 네모크기

<textarea> ~ </textarea>

	여러 줄의 텍스트를 입력 받기 위한 입력양식이다.
	rows 속성
	입력양식의 줄의 수를 지정해준다.
	cols 속성
	입력양식의 열의 수를 지정해준다.

-------------------------------

body 요소는 문서의 내용을 의미한다.

block(블록)으로 이루어져 있다.
    . width, height값 설정가능(값 설정 안해주면 아무 값도 없는 상태가 됨)
    . 자동으로 줄바꿈(개행)
    . width값을 설정하지 않으면 부모태그의 100%

-----------------------------

목록태그

ul li 순서가 없다

ol li 순서가 있다

-----------------

이미지 태그는 알트속성을 꼭 포함시키자!


---------------

float 와 overflow:hidden 의 핵심은

부모의 높이가 auto 라는 것!


------------------

가상 클래스(class)와 가상 요소(element)를 편의상 함께 칭할 때 사용하며, 정식 명칭은 아님.

가상 클래스(Pseudo-class)는 요소에 직접적으로 클래스를 부여하지는 않았지만, 요소의 상태에 따라서 클래스를 적용한 것처럼 효과를 다르게 줄 수있다.

overflow:hidden 을 쓰지않는 다른 방법?

float를 가상선택자 : after 로 clear하는 방법

CSS에서

부모 ::before – 실제 내용 바로 앞에서 생성되는 자식요소
부모 ::after – 실제 내용 바로 뒤에서 생성되는 자식요소​

::before와 ::after를 쓸 땐 content라는 속성이 꼭 필요하다고 합니다!



	자식에세 float가 적용된 부모태그 뒤에 :after{
			display: block;
			content : "";
			clear : both;

			} 써주면?

				이렇게 css에 적어주면 float가 적용되지않은 가상
				태그가 생긴다.

----------------------

h1+h1

	h1 태그의 형제태그를 가리킨다.(알아만 두자)

-------------------------------

포지션(position) > 내가 원하는 위치에 재배치

1. absolute "부모에 position 설정이 되어있으면 부모의 기준좌표에서 절대기준 재배치"
							"부모 태그 ppsition 미 설정시 브라우저 기본좌표 중심으로 재배치된다."

							부모가 포지션이 없고 자식에게 포지션을 주고 left: 0 이런식으로 값을 표기해준뒤
							부모에 마진 0 auto를 주면 자식은	부모 마진에 영향을 받지 않고 브라우저 중심으로 재배치 된다.
							(자식에 포지션 준 후 부모에 마진 가로 가운데 주면 0값 표기 안됐을때는 부모따라가는데
							0값을 표기 해주면 부모를 따라가지 않고 브라우저 중심으로 재배치된다. 이런 예민함이 있다.)

							단점 : 가운데를 제대로 잡기 힘듬

2. relative "나를 중심으로 재배치" , 현재의 위치에서 재배치.
						갤러리구조에 부모, *margin:0 auto 설정가능 (absolute는 마진 0 auto가 안먹음)

3. fixed 기준 배치 무시하고 브라우저 좌표 기준으로 재배치
				 left,top,right,bottom값을 설정 안하면 기본포지션과 같다.
				 값 설정 안하면 static과 같다.

4. static

----------------------------------
z-index : 기본이 0, 숫자가 크면 위에 배치

뒤에주어지는 숫자 값이 클수록 화면 앞으로 나온다.


---------------------------

border-radius 둥글게 말아준다.

--------------------------

계산법

가로 가운데 위치 = 부모의 너비/2 - 자신의 너비 /2

세로 가운데 위치 = 부모의 높이/2 - 자신의 높이 /2

--------------------------------

(시맨틱)semantic 의 의미

태그만 보고도 문서를 쉽게 이해 할 수 있도록
도입되었다.

#wrap
header
nav
section
article
footer
aside
address

--------------------------------

 w'_^  -'- v -'-	^_'w
< :  :\(_O . O_)/:  : >
< : -:|( -=0=- )|:- : >
/.-':'/'/w'-'w\'\':'-.\

내가 그린 부엉이
---------------------------------------

:active " 눌렀을 때 "
:hover " 올렸을 때 "
transition : 속성 시간; "액션을 적용한 후에"

>>>> 속성을 시간동안 적용.

원래 기본 태그에 속성을 적용.

all >>> 모든 속성

1s 1초
"배경 생삭이 변한다는 것은" >>> 배경이미지가
변한다.

-----------------------------------------

CSS

1. 외부스타일 < 프로젝트 제작시 사용
2. 내부스타일 < HTML 파일이 하나 있을 경우 사용
3. 인라인스타일
	(태그안에 직접지정) < 특별한 경우에만 사용


--------------------------------------

벤더 프리픽스(vendor prefix)란 주요 웹 브라우저 공급자가
새로운 실험적인 기능을 제공할 때 이전 버전의 웹 브라우저에
그 사실을 알려주기 위해 사용하는 접두사(prefix)를 의미한다.

접두어

-moz- 파이어 폭스
-ms- 익스플로러
-webkit- 크롬, 사파리
-o- 오페라

CSS3에서 각 브라우저마다 동일한 효과를 주기 위해 접두사를 사용하여
설정 해주는 것. 밴더 프리픽스라고 부른다.

예시

-ms-transition
-webkit-transition
-moz-transition
-o-transition

쓰는 이유 : 아직 표준화가 안되서 그럼.

-------------------------------------------------

transition >>> 속성을 시간동안 구현.
transition : 속성, 시간   ex) width 1s, height 2s 또는 all 0.1s

-----------------------------------------

a태그는 임시 값을 줘야 한다.

프로젝트명 : 한글X, 숫자시작X, 공란없이.

-------------------------------

레이아웃은 div로 잡고
nav 같은건 li로 잡고
특정한 한두개는 span 으로 잡는다.

----------------------------------

margin : 나하고 부모 또는 다른 태그와의 여백

padding : 나하고 내 자식 태그와의 여백

----------------------------------------

transform <<>> transition과 함께 사용
translate 위치변화
scale 크기변화
rotate 회전
skew 변형

--------------------------------------

inline 태그(span,a)의 특징

	자동으로 부모의 왼쪽부터 오른쪽으로 가로 정렬
	width,height X. 값 안먹는다.
	컨텐츠가 없으면 보이지 않는다.

	span

		하나의 특징적인,	독립적인 거에 많이 쓰임

		단추라던지 화살표라던지 등등.

	------------------------------------

display : block,inline,inline-block,none

---------------------------------

animation

		키프레임을 기준으로 변화되는 스타일을 적용한다.
		시간에 따라 애니메이션 효과를 준다.

		animation-name : 애니메이션 이름 정한다.
		animation-delay : 처음에 몇 초후 발동 되는지 설정
		animation-duration : 4s; 애니메이션 시간 s(초)
		animation-iteration-count : 3; 3번 되풀이
																infinite; 하면 무한반복으로
																설정

		transform <<>> transition과 함께 사용.

@keyframe {}

----------------------------------------------

클래스 이름은 의미를 포함하는 것이 좋다.

1. animation 실습
css 선택자 이해

2. video, audio 태그

예전에는 플러그인(브라우저 기본 기능에 추가 기능을 외부에서 제공)
을 설치 했어야 했다.

국제 표준 : .mp4

---------------------------------------------

/* 자바스크립트에서도 위치 설정 가능하다 */

~형제선택자

--------------------------------

==반응형 웹 디자인==

미디어 쿼리

-----------------------------

자바스크립트 개념정리

자바스크립트는 객체 지향적 프로그래밍 언어이다.
F
객체(Object)

1. 객체를 구성하는 것은 속성(Property)이다.

2. 또한 기능을 담당하는 Method가 있다.

property 와 method 를 객체를 구성하는 멤버라고 한다.

어플개발 > 급한 볼 일

---------------------------

그라디언트

background : linear-gradient(xxxdeg, 색깔, 색깔)

deg

--------------------------

fixed " 기본 배치를 무시하고 브라우저 기준좌표 기준으로 재배치"
			" 값(left,top,right,bottom)을 반드시 설정한다."
			값을 안넣으면 문제가 생긴다.

-----------------------

background-size:cover; // 부모태그의 width값에 따라..
height가 자동으로 설정된다.
background:cover
>>>배경이미지 width값의 100%로 자동으로 맞춘다.
>>>배경이미지 height는 자동으로 원본의 같은 비율대로 조정

contain
contain으로 지정하면 배경 이미지의 가로, 세로 길이 모두 엘리먼트
안에 들어온다라는 조건하에 가능한한 배경 이미지를 크게 조정합니다.
가로/세로 비율은 유지됩니다.
따라서 배경 이미지의 크기는 엘리먼트의 크기보다 항상 작거나 같습니다.

cover
cover로 지정하면 배경 이미지의 가로, 세로 길이 모두 엘리먼트보다 크다라는 조건하에
가능한한 배경 이미지를 작게 조정합니다. 가로/세로 비율은 유지됩니다.
따라서 배경 이미지의 크기는 엘리먼트의 크기보다 항상 크거나 같습니다.
--------------------------

float을 clear하는 방법(clearfix)
마크업 후에 CSS작업을 하다보면 가장 많이 겪는 순간이 상단 네비게이션바를 만들 때 float속성으로 원하는 곳에 배치를 하면 그 다음에 오는 태그들의 위치가 뭉개지는 경우가 허다한데
원래 float 뒤에 포지션이 뭉개지는 현상은 브라우저상의 오류로 생겨난 것이고, 이를 해결하는 clearfix는 위의 오류를 해결하기 위해 똑똑한 분들이 만들어낸 일종의 버그해결 방법이다.

clearfix의 네 가지 방법
가상 요소 ::after 사용(권장)
overflow속성 사용
빈 엘리먼트로 clear속성 적용
float로 대응
하지만 1번 방법만 알고 사용하면 되기 때문에 나머지는 간략하게 알아두자.

------------------------

변수는 하나의 data를 저장할 수 있는 공간이다.

------------------------

해상도 ? : 1920 x 1080 너비에 1920개의 비트맵이 있음 해상도가 좋을수록 파일의 크기가 커짐.

max-width : 1000px; ? -> 아무리 커도 1000px을 넘어가지 않는다.

모바일 : min-width : 320 ~ 이상... max-width : 763 ~까지(이하)
태블릿 : min-width : 764 ~ 1023
데스크탑 : min-width : 1024 ~

반응형 웹 디자인의 핵심?
반응형 웹 디자인을 하는 이유 : for mobile market

** 레이아웃 고정형(px)으로,
** 세부 디자인은 변동형으로(%)
** 이미지나 컨텐츠(텍스트,동영상..)는 기본적으로
	 width:100%; height:auto로 맞춘다.
** 이미지의 부모태그의 height : auto;

--------------------

box-sizing:content-box 너비 width+padding+border
box-sizing:border-box 너비 width+padding+border

--------------------

margin : 나와 내 부모 또는 다른 태그와의 여백

-----------------------

Viewport

<meta name="viewport" content="width=device-width, initial-scale=1.0">

width=device-width 너비를 디바이스에 맞춰라.

initial-scale 페이지가 처음 로드될 때 줌 레벨을
							조정한다. 1.0은 100%와 같음.

user-scalable : 아무것도 안쓰면 기본이 yes이다.
								1년전만해도 막아놨었는데 지금
								손가락으로 좌우동작

----------------------------

미디어 퀴리 (query >> 질의한다. 물어본다.
						어디에? 브라우저에)

@media 대상 screen(print) and (조건) {

   //조건에 맞는 css

}

대상 only 하나
		all 모두

@media only screen and (max-width : 500px) {

} 나는 오직 스크린에게만 물어본다.질의한다.

500px까지는


only 연산자를 사용하면 미디어 특성을 지정하는
미디어쿼리를 서포트하지 않는 낡은 브라우저에
대응하여 특정 스타일을 적용하는것이 가능합니다.
우리는 거의 이것을 쓴다.

----------------

이미지태그는 기본 border값이 1이 있다.


-------------------

inline

1. 자동으로 부모의 왼쪽부터 오른쪽으로 자동 정렬
2. width,height 값 설정 x

inline-block
1. 자동으로 부모의 왼쪽부터 오른쪽으로 자동 정렬
(기본 마진있음)
2. width, height 설정 O
이미지 태그는 기본적으로 인라인블럭이다.
따라서 블럭으로 바꿔주면 좋음

none >> 사라진다.

----------------------

정리 - (하나의 성질)

width :auto;에
position : absolute ; 같이주면 자동으로
width 값이 딱 맞게 된다.

편한점? width : auto 설정 되어있으면
자식 width 값이 바뀌면 자동으로 늘어나서 편하다.

---------------------

* 코드 작성 순서가 중요하다!

	* 무조건 아래에 작성한 것이 이긴다. (폭포수를 생각하렴~!)

	* 하지만 선택자가 제일 쎔. (구체적인 이름을 가졌기 때문에 CSS가 더 우선적으로 적용하는 것이다. )

	* 쎈 순서를 보여주자면 :     .예슬 < 김.예슬 < 연수동 김.예슬

		* .section < h1.section < div h1.section



* 클래스를 하나 이상 작성 가능하다.

	* <div class=“section skill”></div>



* 이미지가 컨텐츠일 경우에는 <img>태그를 사용하고 / 그냥 단순히 꾸며주고 싶은 것은 css에서 backgroun-image 사용함.

	* 단, css의 목적 상 꾸며주기 위한 것을 img로 넣는 경우도 있다.



* <span>태그

	* 텍스트의 일부만 선택하여 일부의 디자인만 변경시킬 때 사용할 수 있음.



* Block 방식

	* 한 줄에 하나만 배치.

	* 위에서 아래로 차곡차곡 쌓이는

	* 박스모델이 적용되는

	* <div> 등



* Inline 방식

	* 텍스트,  이미지

	* 일부분만 선택할 수 있는

	* 가로로 배치되는.

	* 줄, 문장 의 개념이라고 보면 됨.

	* 박스모델이 적용되지 않는다. 너비가 아예 무시됨. 적용 불가!!

	* 마진 패딩은 상하단 안됨

		* 패딩은 상하단이 되긴 하지만, 시각적으로만 적용 가능한 것이고 공간을 차지하지는 않는다.

	* inline 방식은 text-align : center; 에 반응한다.

	* <a><span><strong><em>



* inline-block 방식

	* inline 요소에 display: inline-block; 을 사용해서 적용시키면 됨.

	* inline과 block의 성격을 모두 가지고 있음.

	* text-align이 적용된다.

	* 워드프로세서의 ‘글자처럼 취급’ 같은 녀석임.

		* 블럭이 가로로 배치된다고 생각하면 이해가 쉬울지도..

	* <img>태그는 inline-block의 어느정도 특성을 가지고 있음.

--------------------------------------

미디어 쿼리의 논리연산자

not and only 와 같은 논리연산자를 사용해
복잡한 미디어 쿼리를 구성하는 것이 가능합니다.

and

and 연산자는 복잡한 미디어 특성들이
서로 연결되거나 미디어 특성과 미디어타입을
연결시키는데 사용됩니다.
기본적으로 미디어쿼리(미디어 타입이 all 로 지정된
미디어특성)은 다음과 같이 표시하는것이 가능합니다.

only

only 연산자를 사용하면 미디어 특성을 지정하는
미디어쿼리를 서포트하지 않는 낡은 브라우저에
대응하여 특정 스타일을 적용하는것이 가능합니다.

not
어떤 미디어 쿼리의 결과가 거짓인 경우
(컬러 디스플레이의 경우 monochrome이나
min-width: 700px 의 미디어 특성에
대응하는 폭이 600px인 스크린)
, 이 쿼리 전체에 not 연산자가 적용된 결과는
참이 됩니다.
컴마 구분 미디어쿼리에 not 연산자를 적용한 경우
일련의 미디어 쿼리 전체에 반대되는 결과를
반환합니다. 각각의 쿼리에 not 연산자를
부여하는 행위로 착각하는 경우가 많이 있으니
주의해야 합니다. not 연산자는 개별의 미디어
쿼리를 역으로 바꾸는것이 불가능하며,
항상 미디어쿼리 전체를 대상으로 적용됩니다.
예를 들어 이하의 쿼리의 not 연산자 또한
제일 마지막에 처리됩니다.





---------------------------------------

자바스크립트

브라우저에 최적화된 언어.
보안에 취약하다.

- 이벤트 중심 프로그래밍. 이벤트 중심의 언어다.
	(ex ) click, mouse, key )
- 객체 기반/지향적 언어

-----------------------


1. 자바스크립트란?

	스크립트 언어이다

	컴파일 사람(소스) 컴파일(번역) 컴퓨터(0,1)인식

			C,C++,java..

			스크립트언어
						인터프리터언어(자바스크립트,jsp,swift..)

.브라우저의 최적화된 언어...
.보안에 취약하다..
.많은 라이브러리가 있다. ("미리 만들어 놓은 자바스크립트")
 자바스크립트에서는 세미콜론을 빼도 작동하지만, 우리는 쓰도록 하자.
	jQuery,
	node.js(자바스크립트 서버사이드 플랫폼) >>> 하이브리드앱(코르도바)

2.변수

	하나의 data를 저장할 수 있는 저장 공간
	C,C++,C#,Java,

	- 공간의 주소
	- 공간의 참조값

	var 변수명;// 변수

	var num; // 변수 num을 선언 했다.(data==자료(type))
					/// 메모리에 변수명으로 할당

					num=10;// 변수 num을 10으로 초기화 했다.
					// 변수의 자료형(type)은 data의 자료형에 따라 결정된다.

	var str; str=0.4; // 변수 str을 선언; 0.4로 초기화;

 int num;// c, java
 float f

 변수에 값을 처음 넣는것을 초기화라고 한다.
 그 다음부터는 대입이라고 함.


자바스크립트의 내장함수

window.console.log(값); // 브라우저 콘솔에 값을 표시해주는 함수

typeof 변수 // 그 변수가 문자열인지 숫자열인지를 파악해준다.

-----------------------------

변수 "하나의 data를 저장 할 수 있는 저장공간"

1. 공간(주소), 메모리 차지
2. 참조(주소가 참조값)

var num = 190; /// 변수 num을 선언하고 정수형(숫자)

num=num+10
왼쪽 num은 저장 공간을 의미한다.

오른쪽 num은 공간에 담겨있는 참조 값을 의미

--------------------------------

자바스크립트.. 객체지향적 언어..

BOM... Browser Object Model
	브라우저와 관련된 부분
	웹페이지의 내용을 제외한 브라우저의 각종 요소들을 객체화 시킨 것이다.
	전역 객체 Window의 프로퍼티에 속한 객체들이 이에 속함.

DOM... Document Object Model
	실제로 브라우저에 표시되는 문서(HTML) 부분
	웹페이지의 내용을 제어한다. window의 프로퍼티인 document 프로퍼터에
	할당된 Document 객체가 이러한 작업을 담당한다.
	Document 객체의 프로퍼티는 문서 내의 주요 엘리먼트에 접근할 수 있는
	객체를 제공한다.




ECMAScript 내장객체 <<< 함수(function)

자바스크립트는 이 3개의 객체로 이루어졌다.

------------------------

변수 명명 규칙

1. 숫자로 시작하지 않는다.
2. 공란을 허용하지 않는다.
3. 한글 사용을 지양한다.(되는게 있으나 사용하지 않는다.)
4. _ $ 이외의 특수 기호를 허용하지 않는다.
5. 대소문자를 구분한다.
6. 단어가 연결되면 첫번째 단어는 대문자로 사용하길 권장한다.(이것은 약속이다.)
		ex) Document ActionQueryMember=10
7. var 키워드를 사용하지 않아도 변수를 선언 할 수 있다.
8. 키워드(예약어)는 사용할 수 없다.

변수의 자료형.. (type)
data의 자료형에 따라 변수의 자료형이 결정된다.
var num =100;
var num =manso;

typof 변수 ://변수의 자료형을 알아보는 함수

----------------------------

문자열 + 숫자 >>>> 문자열+문자열 -> 문자열로 바뀐다.

1. number(숫자)
2. string (문자열)
3. boolean (논리)  true, false
4. 배열은 자료형이 객체이다.
  ex) var arrInt=[1,2,3,4,5];
		typeof arrInt 치면 "object"가 출력된다.
		왜? 배열은 자료형이 객체이기 때문.

bool=true;// 대입연산자

배열 "하나이상의 data를 순서대로(index) 그룹화"
			array();

-------------------------------

문서안의 객체를 선택해보자.

window.document.get~~
window.document.set~~
//get이라는 키워드가 나오면 가져온다, 얻는다는 것이다.
//set이라는 키워드는 내가 설정한다는 것이다.

window.document.getElementById('아이디명')


객체를 구성하는 member라고 한다.
(property,method,object)

객체 = {
		속성(프로퍼티),
		속성2,
		메서드=function(){
		},
		객체={
		},
		객체={
		}
};


// . <<점은 객체접근(참조)연산자이다.

	객체.속성1
	객체.객체.속성;
	객체.매서드()

함수를 만들어 놓고 호출하는 것을 콜이라고 한다.
자바스크립트는 이벤트 중심이다.

ex) window.document.getElementById('btn1')
		.addEventListener('click',btnOnClicked);

이벤트 중심의 함수를 호출한다.

click은 손을 떼는 것이다.
mousedown 은 눌렀을 때임

모바일에서 쓰이는 이벤트 down+move+click = 제스쳐
로 쓸 수도 있음.

window.onload=function(){}

	{} 안의 함수를 적용시켜라


window.onload 는 body가 뜬 다음에 실행된다.

--------------------------------

absolute 성질 복습

포지션이 absolute일 때 부모의 width를 오토로 잡으면
자식들의 총 width만큼 넓어진다.

-----------------------------------

Operator(연산자) ... "연산을 처리(수행)하는 기호"
			연산 >> 프로그램을 기능 처리, 실행,
			구현하는 과정이다.

Operand(피연산) - 연산의 대상

산술연산자 +-*/% << 수학적계산...
			5+3
변수 >>> 하나의 data를 저장할 수 있는 저장공간


단항연산자

	단항 연산자란 피 연산자가 1개인 연산자입니다

	양수(+) 음수(-) ++ --(증감연산자)

++ "1증가"
-- "1감소"

var i = 10;

i++   ;// 선처리 후증가 "먼저 처리(연산)하고 다시 변수에 1을 증가"
++i   ;// 선증가 후처리
i--   ;// 선처리 후감소
--i   ;// 선감소 후처리

 ex) var i=10;
 		 console.log(i++);//10
		 console.log(i); // 11
		 console.log(--i); // 10
		 console.log(i--); // 10
		 console.log(i); // 9
		 console.log(++i); // 10

이항연산자

		산술연산자 ( + - */%)
		(이항연산자ㅡ앞에서부터 차례대로 2개씩 계산한다.)
		비교연산자 > >= < <= == === != !== "왼쪽"
							비교는 왼쪽 기준으로!
		논리연산자 && , ||
		비트연산자 & , |
		복합대입연산자 +=, -=, *=, /=, %=
									총쏘는 원리

삼항연산자



for (초기화;조건식;증감식){
				//조건에 맞으면 처리
}

대입연산자 : "오른쪽에 연산의 결과를 왼쪽의 변수에 대입"
							"가장 나중에 처리하는 연산자"

var num = 1+1;

비교연산자 > >= < <= == === != !==

	"왼쪽" 결과 값이 true, false

	10>20 false

	비교연산자에서 ==은 자료형과 상관없이 데이터가 같냐? 를
							  비교하는 것이다.
								변수의 자료형과 상관없이 값만 같은지 확인

100=="100" >> true
100==="100" >> false

	비교연산자 ===가 트루가 되려면 값도 같고 자료형도 같아야 한다.

"같지 않지?"  같지 않으면 true

10!=10 false
10!=8 true "같지 않기 때문에 true"

10!="10" false

!= 는 값만비교
!== 값과 자료형을 둘다 비교


if(조건){
					//조건이 true일 때만 실행
}
var pw="1111";

------------------------------------

if(조건){
			//조건이 true 일 때만 실행
}

var pw="1111";

if(pw==1111){
								//
}





조건문(if,switch)
setInterval(함수,시간)... 함수를 시간이후 마다 실행
animate(), <<CSS에서 비슷한건 transform(), transistion
							단점은 css가 안되는 브라우저가 있다는 것.
window.scroll();





------------------------------------
css 복습

display의 속성

block - width, height O 자동줄바꿈
inline - width,heightX ,
자동으로 부모기준으로 왼쪽에서 오른쪽으로 정렬

inline-block - width, height O
자동으로 부모기준으로 왼쪽에서 오른쪽으로 정렬

text-indent : 문단의 첫줄 들여쓰기

------------------------

기본 레이아웃, 미디어쿼리활용+뷰포트

----------------------------------------

reset.css << 필수
commons.css << 공통적인 css
